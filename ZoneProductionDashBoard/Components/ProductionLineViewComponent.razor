@inherits UpdatableComponent

<RadzenTimeline 
    Orientation="Orientation.Horizontal" 
    AlignItems="AlignItems.Center" 
    @ref="_timeLine">

    <Items>
        @foreach (IProductionPosition pos in (TypeOfVan is TypeOfVan.Gen2) ? Gen2ProductionPosition.GetAll() : ExpoProductionPosition.GetAll())
        {
            <RadzenTimelineItem>
                <LabelContent>
                    <RadzenText>@pos.PositionName</RadzenText>
                </LabelContent>
                <ChildContent>
                    <RadzenStack>
                        @foreach (var van in Vans.Where(x => x.Position.Equals(pos)))
                        {
                            <RadzenText>@van.Name</RadzenText>
                        }
                    </RadzenStack>
                </ChildContent>
            </RadzenTimelineItem>
        }
    </Items>
</RadzenTimeline>

@code {
    [Parameter, EditorRequired] 
    public IEnumerable<VanBoard> Vans { get; set; } = default!;

    [Parameter, EditorRequired] 
    public TypeOfVan TypeOfVan { get; set; } = default;

    public List<IProductionPosition> _positions = [];

    RadzenTimeline _timeLine = default!;


    protected override void OnInitialized()
    {
        ArgumentNullException.ThrowIfNull(Vans);

        if (!Vans.All(x => x.VanModel.IsGen2()) || !Vans.All(x => !x.VanModel.IsGen2()))
            throw new ArgumentException("Cannot add vans from seperate lines to production line view compontent");

        if (Vans.Any(x => x.VanModel.IsGen2()))
            _positions = Gen2ProductionPosition.GetAll().Select(x => (IProductionPosition)x).ToList();
        
        else
            _positions = ExpoProductionPosition.GetAll().Select(x => (IProductionPosition)x).ToList();
        
        base.OnInitialized();
    }

    public override void Update()
    {
        base.Update();
    }

}